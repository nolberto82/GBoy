namespace GBoy.Core;
public partial class Cpu
{
    private void Step00(byte op)
    {
        switch (op)
        {
            case 0x00: { }; break;
            case 0x01: BC = OpLdImm16(); break;
            case 0x02: OpLdWr(BC, A); break;
            case 0x03: BC = OpInc16(BC); break;
            case 0x04: B = OpInc8(B); break;
            case 0x05: B = OpDec8(B); break;
            case 0x06: B = OpLdImm8(); break;
            case 0x07: OpRlca(); break;
            case 0x08: OpLdWr16(SP); break;
            case 0x09: HL = OpAdd(HL, BC); break;
            case 0x0a: A = OpLdReg(BC); break;
            case 0x0b: BC = OpDec16(BC); break;
            case 0x0c: C = OpInc8(C); break;
            case 0x0d: C = OpDec8(C); break;
            case 0x0e: C = OpLdImm8(); break;
            case 0x0f: OpRrca(); break;
            case 0x10: IME = false; Halt = true; Stop = 8200; break;
            case 0x11: DE = OpLdImm16(); break;
            case 0x12: OpLdWr(DE, A); break;
            case 0x13: DE = OpInc16(DE); break;
            case 0x14: D = OpInc8(D); break;
            case 0x15: D = OpDec8(D); break;
            case 0x16: D = OpLdImm8(); break;
            case 0x17: OpRla(); break;
            case 0x18: OpJr(true); break;
            case 0x19: HL = OpAdd(HL, DE); break;
            case 0x1a: A = OpLdReg(DE); break;
            case 0x1b: DE = OpDec16(DE); break;
            case 0x1c: E = OpInc8(E); break;
            case 0x1d: E = OpDec8(E); break;
            case 0x1e: E = OpLdImm8(); break;
            case 0x1f: OpRra(); break;
            case 0x20: OpJr((F & FZ) == 0); break;
            case 0x21: HL = OpLdImm16(); break;
            case 0x22: OpLdWr(HL++, A); break;
            case 0x23: HL = OpInc16(HL); break;
            case 0x24: H = OpInc8(H); break;
            case 0x25: H = OpDec8(H); break;
            case 0x26: { H = OpLdImm8(); }; break;
            case 0x27: OpDaa(); break;
            case 0x28: OpJr((F & FZ) > 0); break;
            case 0x29: HL = OpAdd(HL, HL); break;
            case 0x2a: A = OpLdReg(HL++); break;
            case 0x2b: HL = OpDec16(HL); break;
            case 0x2c: L = OpInc8(L); break;
            case 0x2d: L = OpDec8(L); break;
            case 0x2e: L = OpLdImm8(); break;
            case 0x2f: OpCpl(); break;
            case 0x30: OpJr((F & FC) == 0); break;
            case 0x31: SP = OpLdImm16(); break;
            case 0x32: OpLdWr(HL--, A); break;
            case 0x33: SP = OpInc16(SP); break;
            case 0x34: OpLdWr(HL, OpInc8(OpLdReg(HL))); break;
            case 0x35: OpLdWr(HL, OpDec8(OpLdReg(HL))); break;
            case 0x36: OpLdWr(HL, OpLdImm8()); break;
            case 0x37: OpScf(); break;
            case 0x38: OpJr((F & FC) > 0); break;
            case 0x39: HL = OpAdd(HL, SP); break;
            case 0x3a: A = OpLdReg(HL); HL--; break;
            case 0x3b: SP = OpDec16(SP); break;
            case 0x3c: A = OpInc8(A); break;
            case 0x3d: A = OpDec8(A); break;
            case 0x3e: A = OpLdImm8(); break;
            case 0x3f: OpCcf(); break;
            case 0x40: { }; break;
            case 0x41: B = C; break;
            case 0x42: B = D; break;
            case 0x43: B = E; break;
            case 0x44: B = H; break;
            case 0x45: B = L; break;
            case 0x46: B = OpLdReg(HL); break;
            case 0x47: B = A; break;
            case 0x48: C = B; break;
            case 0x49: { }; break;
            case 0x4a: C = D; break;
            case 0x4b: C = E; break;
            case 0x4c: C = H; break;
            case 0x4d: C = L; break;
            case 0x4e: C = OpLdReg(HL); break;
            case 0x4f: C = A; break;
            case 0x50: D = B; break;
            case 0x51: D = C; break;
            case 0x52: { }; break;
            case 0x53: D = E; break;
            case 0x54: D = H; break;
            case 0x55: D = L; break;
            case 0x56: D = OpLdReg(HL); break;
            case 0x57: D = A; break;
            case 0x58: E = B; break;
            case 0x59: E = C; break;
            case 0x5a: E = D; break;
            case 0x5b: { }; break;
            case 0x5c: E = H; break;
            case 0x5d: E = L; break;
            case 0x5e: E = OpLdReg(HL); break;
            case 0x5f: E = A; break;
            case 0x60: H = B; break;
            case 0x61: H = C; break;
            case 0x62: H = D; break;
            case 0x63: H = E; break;
            case 0x64: { }; break;
            case 0x65: H = L; break;
            case 0x66: H = OpLdReg(HL); break;
            case 0x67: H = A; break;
            case 0x68: L = B; break;
            case 0x69: L = C; break;
            case 0x6a: L = D; break;
            case 0x6b: L = E; break;
            case 0x6c: L = H; break;
            case 0x6d: { }; break;
            case 0x6e: L = OpLdReg(HL); break;
            case 0x6f: L = A; break;
            case 0x70: OpLdWr(HL, B); break;
            case 0x71: OpLdWr(HL, C); break;
            case 0x72: OpLdWr(HL, D); break;
            case 0x73: OpLdWr(HL, E); break;
            case 0x74: OpLdWr(HL, H); break;
            case 0x75: OpLdWr(HL, L); break;
            case 0x76: Halt = true; PC--; break;
            case 0x77: OpLdWr(HL, A); break;
            case 0x78: A = B; break;
            case 0x79: A = C; break;
            case 0x7a: A = D; break;
            case 0x7b: A = E; break;
            case 0x7c: A = H; break;
            case 0x7d: A = L; break;
            case 0x7e: A = OpLdReg(HL); break;
            case 0x7f: { }; break;
            case 0x80: OpAdd8(B); break;
            case 0x81: OpAdd8(C); break;
            case 0x82: OpAdd8(D); break;
            case 0x83: OpAdd8(E); break;
            case 0x84: OpAdd8(H); break;
            case 0x85: OpAdd8(L); break;
            case 0x86: OpAdd8(OpLdReg(HL)); break;
            case 0x87: OpAdd8(A); break;
            case 0x88: OpAdc8(B); break;
            case 0x89: OpAdc8(C); break;
            case 0x8a: OpAdc8(D); break;
            case 0x8b: OpAdc8(E); break;
            case 0x8c: OpAdc8(H); break;
            case 0x8d: OpAdc8(L); break;
            case 0x8e: OpAdc8(OpLdReg(HL)); break;
            case 0x8f: OpAdc8(A); break;
            case 0x90: OpSub8(B); break;
            case 0x91: OpSub8(C); break;
            case 0x92: OpSub8(D); break;
            case 0x93: OpSub8(E); break;
            case 0x94: OpSub8(H); break;
            case 0x95: OpSub8(L); break;
            case 0x96: OpSub8(OpLdReg(HL)); break;
            case 0x97: OpSub8(A); break;
            case 0x98: OpSbc8(B); break;
            case 0x99: OpSbc8(C); break;
            case 0x9a: OpSbc8(D); break;
            case 0x9b: OpSbc8(E); break;
            case 0x9c: OpSbc8(H); break;
            case 0x9d: OpSbc8(L); break;
            case 0x9e: OpSbc8(OpLdReg(HL)); break;
            case 0x9f: OpSbc8(A); break;
            case 0xa0: OpAnd(B); break;
            case 0xa1: OpAnd(C); break;
            case 0xa2: OpAnd(D); break;
            case 0xa3: OpAnd(E); break;
            case 0xa4: OpAnd(H); break;
            case 0xa5: OpAnd(L); break;
            case 0xa6: OpAnd(OpLdReg(HL)); break;
            case 0xa7: OpAnd(A); break;
            case 0xa8: OpXor(B); break;
            case 0xa9: OpXor(C); break;
            case 0xaa: OpXor(D); break;
            case 0xab: OpXor(E); break;
            case 0xac: OpXor(H); break;
            case 0xad: OpXor(L); break;
            case 0xae: OpXor(OpLdReg(HL)); break;
            case 0xaf: OpXor(A); break;
            case 0xb0: OpOr(B); break;
            case 0xb1: OpOr(C); break;
            case 0xb2: OpOr(D); break;
            case 0xb3: OpOr(E); break;
            case 0xb4: OpOr(H); break;
            case 0xb5: OpOr(L); break;
            case 0xb6: OpOr(OpLdReg(HL)); break;
            case 0xb7: OpOr(A); break;
            case 0xb8: OpCp(B); break;
            case 0xb9: OpCp(C); break;
            case 0xba: OpCp(D); break;
            case 0xbb: OpCp(E); break;
            case 0xbc: OpCp(H); break;
            case 0xbd: OpCp(L); break;
            case 0xbe: OpCp(OpLdReg(HL)); break;
            case 0xbf: OpCp(A); break;
            case 0xc0: OpRet((F & FZ) == 0); break;
            case 0xc1: BC = OpPop(); break;
            case 0xc2: OpJp((F & FZ) == 0); break;
            case 0xc3: OpJp(true); break;
            case 0xc4: OpCall((F & FZ) == 0); break;
            case 0xc5: Tick(); OpPush(BC); break;
            case 0xc6: OpAdd8(OpLdImm8()); break;
            case 0xc7: OpRst(0x00); break;
            case 0xc8: OpRet((F & FZ) > 0); break;
            case 0xc9: OpRet(true, true); break;
            case 0xca: OpJp((F & FZ) > 0); break;
            case 0xcb: break;
            case 0xcc: OpCall((F & FZ) > 0); break;
            case 0xcd: OpCall(true); break;
            case 0xce: OpAdc8(OpLdImm8()); break;
            case 0xcf: OpRst(0x08); break;
            case 0xd0: OpRet((F & FC) == 0); break;
            case 0xd1: DE = OpPop(); break;
            case 0xd2: OpJp((F & FC) == 0); break;
            case 0xd3: State = Debugging; break;
            case 0xd4: OpCall((F & FC) == 0); break;
            case 0xd5: Tick(); OpPush(DE); break;
            case 0xd6: OpSub8(OpLdImm8()); break;
            case 0xd7: OpRst(0x10); break;
            case 0xd8: OpRet((F & FC) > 0); break;
            case 0xd9: OpReti(); break;
            case 0xda: OpJp((F & FC) > 0); break;
            case 0xdb: State = Debugging; break;
            case 0xdc: OpCall((F & FC) > 0); break;
            case 0xdd: State = Debugging; break;
            case 0xde: OpSbc8(OpLdImm8()); break;
            case 0xdf: OpRst(0x18); break;
            case 0xe0: OpLdWr((ushort)(0xff00 + OpLdImm8()), A); break;
            case 0xe1: HL = OpPop(); break;
            case 0xe2: OpLdWr((ushort)(0xff00 + C), A); break;
            case 0xe3: State = Debugging; break;
            case 0xe4: State = Debugging; break;
            case 0xe5: Tick(); OpPush(HL); break;
            case 0xe6: OpAnd(OpLdImm8()); break;
            case 0xe7: OpRst(0x20); break;
            case 0xe8: SP = OpAddSP(SP, (sbyte)OpLdImm8()); break;
            case 0xe9: PC = HL; break;
            case 0xea: OpLdWr(OpLdImm16(), A); break;
            case 0xeb:
            case 0xec:
            case 0xed: State = Debugging; break;
            case 0xee: OpXor(OpLdImm8()); break;
            case 0xef: OpRst(0x28); break;
            case 0xf0: A = OpLdReg((ushort)(0xff00 + OpLdImm8())); break;
            case 0xf1: AF = OpPop(true); break;
            case 0xf2: A = OpLdReg((ushort)(0xff00 + C)); break;
            case 0xf3: OpDI(); break;
            case 0xf4: State = Debugging; break;
            case 0xf5: Tick(); OpPush(AF); break;
            case 0xf6: OpOr(OpLdImm8()); break;
            case 0xf7: OpRst(0x30); break;
            case 0xf8: HL = OpLdHLSP(SP, (sbyte)OpLdImm8()); break;
            case 0xf9: { Tick(); SP = HL; }; break;
            case 0xfa: A = OpLdReg(OpLdImm16()); break;
            case 0xfb: OpEI(); break;
            case 0xfc:
            case 0xfd: State = Debugging; break;
            case 0xfe: OpCp(OpLdImm8()); break;
            case 0xff: OpRst(0x38); break;
        }
    }

    private void StepCB(byte op)
    {
        switch (op)
        {
            case 0x00: B = OpRlc(B); break;
            case 0x01: C = OpRlc(C); break;
            case 0x02: D = OpRlc(D); break;
            case 0x03: E = OpRlc(E); break;
            case 0x04: H = OpRlc(H); break;
            case 0x05: L = OpRlc(L); break;
            case 0x06: OpLdWr(HL, OpRlc(OpLdReg(HL))); break;
            case 0x07: A = OpRlc(A); break;
            case 0x08: B = OpRrc(B); break;
            case 0x09: C = OpRrc(C); break;
            case 0x0a: D = OpRrc(D); break;
            case 0x0b: E = OpRrc(E); break;
            case 0x0c: H = OpRrc(H); break;
            case 0x0d: L = OpRrc(L); break;
            case 0x0e: OpLdWr(HL, OpRrc(OpLdReg(HL))); break;
            case 0x0f: A = OpRrc(A); break;
            case 0x10: B = OpRl(B); break;
            case 0x11: C = OpRl(C); break;
            case 0x12: D = OpRl(D); break;
            case 0x13: E = OpRl(E); break;
            case 0x14: H = OpRl(H); break;
            case 0x15: L = OpRl(L); break;
            case 0x16: OpLdWr(HL, OpRl(OpLdReg(HL))); break;
            case 0x17: A = OpRl(A); break;
            case 0x18: B = OpRr(B); break;
            case 0x19: C = OpRr(C); break;
            case 0x1a: D = OpRr(D); break;
            case 0x1b: E = OpRr(E); break;
            case 0x1c: H = OpRr(H); break;
            case 0x1d: L = OpRr(L); break;
            case 0x1e: OpLdWr(HL, OpRr(OpLdReg(HL))); break;
            case 0x1f: A = OpRr(A); break;
            case 0x20: B = OpSla(B); break;
            case 0x21: C = OpSla(C); break;
            case 0x22: D = OpSla(D); break;
            case 0x23: E = OpSla(E); break;
            case 0x24: H = OpSla(H); break;
            case 0x25: L = OpSla(L); break;
            case 0x26: OpLdWr(HL, OpSla(OpLdReg(HL))); break;
            case 0x27: A = OpSla(A); break;
            case 0x28: B = OpSra(B); break;
            case 0x29: C = OpSra(C); break;
            case 0x2a: D = OpSra(D); break;
            case 0x2b: E = OpSra(E); break;
            case 0x2c: H = OpSra(H); break;
            case 0x2d: L = OpSra(L); break;
            case 0x2e: OpLdWr(HL, OpSra(OpLdReg(HL))); break;
            case 0x2f: A = OpSra(A); break;
            case 0x30: B = OpSwap(B); break;
            case 0x31: C = OpSwap(C); break;
            case 0x32: D = OpSwap(D); break;
            case 0x33: E = OpSwap(E); break;
            case 0x34: H = OpSwap(H); break;
            case 0x35: L = OpSwap(L); break;
            case 0x36: OpLdWr(HL, OpSwap(OpLdReg(HL))); break;
            case 0x37: A = OpSwap(A); break;
            case 0x38: B = OpSrl(B); break;
            case 0x39: C = OpSrl(C); break;
            case 0x3a: D = OpSrl(D); break;
            case 0x3b: E = OpSrl(E); break;
            case 0x3c: H = OpSrl(H); break;
            case 0x3d: L = OpSrl(L); break;
            case 0x3e: OpLdWr(HL, OpSrl(OpLdReg(HL))); break;
            case 0x3f: A = OpSrl(A); break;
            case 0x40: OpBit(0, B); break;
            case 0x41: OpBit(0, C); break;
            case 0x42: OpBit(0, D); break;
            case 0x43: OpBit(0, E); break;
            case 0x44: OpBit(0, H); break;
            case 0x45: OpBit(0, L); break;
            case 0x46: OpBit(0, OpLdReg(HL), HL); break;
            case 0x47: OpBit(0, A); break;
            case 0x48: OpBit(1, B); break;
            case 0x49: OpBit(1, C); break;
            case 0x4a: OpBit(1, D); break;
            case 0x4b: OpBit(1, E); break;
            case 0x4c: OpBit(1, H); break;
            case 0x4d: OpBit(1, L); break;
            case 0x4e: OpBit(1, OpLdReg(HL), HL); break;
            case 0x4f: OpBit(1, A); break;
            case 0x50: OpBit(2, B); break;
            case 0x51: OpBit(2, C); break;
            case 0x52: OpBit(2, D); break;
            case 0x53: OpBit(2, E); break;
            case 0x54: OpBit(2, H); break;
            case 0x55: OpBit(2, L); break;
            case 0x56: OpBit(2, OpLdReg(HL), HL); break;
            case 0x57: OpBit(2, A); break;
            case 0x58: OpBit(3, B); break;
            case 0x59: OpBit(3, C); break;
            case 0x5a: OpBit(3, D); break;
            case 0x5b: OpBit(3, E); break;
            case 0x5c: OpBit(3, H); break;
            case 0x5d: OpBit(3, L); break;
            case 0x5e: OpBit(3, OpLdReg(HL), HL); break;
            case 0x5f: OpBit(3, A); break;
            case 0x60: OpBit(4, B); break;
            case 0x61: OpBit(4, C); break;
            case 0x62: OpBit(4, D); break;
            case 0x63: OpBit(4, E); break;
            case 0x64: OpBit(4, H); break;
            case 0x65: OpBit(4, L); break;
            case 0x66: OpBit(4, OpLdReg(HL), HL); break;
            case 0x67: OpBit(4, A); break;
            case 0x68: OpBit(5, B); break;
            case 0x69: OpBit(5, C); break;
            case 0x6a: OpBit(5, D); break;
            case 0x6b: OpBit(5, E); break;
            case 0x6c: OpBit(5, H); break;
            case 0x6d: OpBit(5, L); break;
            case 0x6e: OpBit(5, OpLdReg(HL), HL); break;
            case 0x6f: OpBit(5, A); break;
            case 0x70: OpBit(6, B); break;
            case 0x71: OpBit(6, C); break;
            case 0x72: OpBit(6, D); break;
            case 0x73: OpBit(6, E); break;
            case 0x74: OpBit(6, H); break;
            case 0x75: OpBit(6, L); break;
            case 0x76: OpBit(6, OpLdReg(HL), HL); break;
            case 0x77: OpBit(6, A); break;
            case 0x78: OpBit(7, B); break;
            case 0x79: OpBit(7, C); break;
            case 0x7a: OpBit(7, D); break;
            case 0x7b: OpBit(7, E); break;
            case 0x7c: OpBit(7, H); break;
            case 0x7d: OpBit(7, L); break;
            case 0x7e: OpBit(7, OpLdReg(HL), HL); break;
            case 0x7f: OpBit(7, A); break;
            case 0x80: B = OpRes(0, B); break;
            case 0x81: C = OpRes(0, C); break;
            case 0x82: D = OpRes(0, D); break;
            case 0x83: E = OpRes(0, E); break;
            case 0x84: H = OpRes(0, H); break;
            case 0x85: L = OpRes(0, L); break;
            case 0x86: OpResHL(0); break;
            case 0x87: A = OpRes(0, A); break;
            case 0x88: B = OpRes(1, B); break;
            case 0x89: C = OpRes(1, C); break;
            case 0x8a: D = OpRes(1, D); break;
            case 0x8b: E = OpRes(1, E); break;
            case 0x8c: H = OpRes(1, H); break;
            case 0x8d: L = OpRes(1, L); break;
            case 0x8e: OpResHL(1); break;
            case 0x8f: A = OpRes(1, A); break;
            case 0x90: B = OpRes(2, B); break;
            case 0x91: C = OpRes(2, C); break;
            case 0x92: D = OpRes(2, D); break;
            case 0x93: E = OpRes(2, E); break;
            case 0x94: H = OpRes(2, H); break;
            case 0x95: L = OpRes(2, L); break;
            case 0x96: OpResHL(2); break;
            case 0x97: A = OpRes(2, A); break;
            case 0x98: B = OpRes(3, B); break;
            case 0x99: C = OpRes(3, C); break;
            case 0x9a: D = OpRes(3, D); break;
            case 0x9b: E = OpRes(3, E); break;
            case 0x9c: H = OpRes(3, H); break;
            case 0x9d: L = OpRes(3, L); break;
            case 0x9e: OpResHL(3); break;
            case 0x9f: A = OpRes(3, A); break;
            case 0xa0: B = OpRes(4, B); break;
            case 0xa1: C = OpRes(4, C); break;
            case 0xa2: D = OpRes(4, D); break;
            case 0xa3: E = OpRes(4, E); break;
            case 0xa4: H = OpRes(4, H); break;
            case 0xa5: L = OpRes(4, L); break;
            case 0xa6: OpResHL(4); break;
            case 0xa7: A = OpRes(4, A); break;
            case 0xa8: B = OpRes(5, B); break;
            case 0xa9: C = OpRes(5, C); break;
            case 0xaa: D = OpRes(5, D); break;
            case 0xab: E = OpRes(5, E); break;
            case 0xac: H = OpRes(5, H); break;
            case 0xad: L = OpRes(5, L); break;
            case 0xae: OpResHL(5); break;
            case 0xaf: A = OpRes(5, A); break;
            case 0xb0: B = OpRes(6, B); break;
            case 0xb1: C = OpRes(6, C); break;
            case 0xb2: D = OpRes(6, D); break;
            case 0xb3: E = OpRes(6, E); break;
            case 0xb4: H = OpRes(6, H); break;
            case 0xb5: L = OpRes(6, L); break;
            case 0xb6: OpResHL(6); break;
            case 0xb7: A = OpRes(6, A); break;
            case 0xb8: B = OpRes(7, B); break;
            case 0xb9: C = OpRes(7, C); break;
            case 0xba: D = OpRes(7, D); break;
            case 0xbb: E = OpRes(7, E); break;
            case 0xbc: H = OpRes(7, H); break;
            case 0xbd: L = OpRes(7, L); break;
            case 0xbe: OpResHL(7); break;
            case 0xbf: A = OpRes(7, A); break;
            case 0xc0: B = OpSet(0, B); break;
            case 0xc1: C = OpSet(0, C); break;
            case 0xc2: D = OpSet(0, D); break;
            case 0xc3: E = OpSet(0, E); break;
            case 0xc4: H = OpSet(0, H); break;
            case 0xc5: L = OpSet(0, L); break;
            case 0xc6: OpSetHL(0); break;
            case 0xc7: A = OpSet(0, A); break;
            case 0xc8: B = OpSet(1, B); break;
            case 0xc9: C = OpSet(1, C); break;
            case 0xca: D = OpSet(1, D); break;
            case 0xcb: E = OpSet(1, E); break;
            case 0xcc: H = OpSet(1, H); break;
            case 0xcd: L = OpSet(1, L); break;
            case 0xce: OpSetHL(1); break;
            case 0xcf: A = OpSet(1, A); break;
            case 0xd0: B = OpSet(2, B); break;
            case 0xd1: C = OpSet(2, C); break;
            case 0xd2: D = OpSet(2, D); break;
            case 0xd3: E = OpSet(2, E); break;
            case 0xd4: H = OpSet(2, H); break;
            case 0xd5: L = OpSet(2, L); break;
            case 0xd6: OpSetHL(2); break;
            case 0xd7: A = OpSet(2, A); break;
            case 0xd8: B = OpSet(3, B); break;
            case 0xd9: C = OpSet(3, C); break;
            case 0xda: D = OpSet(3, D); break;
            case 0xdb: E = OpSet(3, E); break;
            case 0xdc: H = OpSet(3, H); break;
            case 0xdd: L = OpSet(3, L); break;
            case 0xde: OpSetHL(3); break;
            case 0xdf: A = OpSet(3, A); break;
            case 0xe0: B = OpSet(4, B); break;
            case 0xe1: C = OpSet(4, C); break;
            case 0xe2: D = OpSet(4, D); break;
            case 0xe3: E = OpSet(4, E); break;
            case 0xe4: H = OpSet(4, H); break;
            case 0xe5: L = OpSet(4, L); break;
            case 0xe6: OpSetHL(4); break;
            case 0xe7: A = OpSet(4, A); break;
            case 0xe8: B = OpSet(5, B); break;
            case 0xe9: C = OpSet(5, C); break;
            case 0xea: D = OpSet(5, D); break;
            case 0xeb: E = OpSet(5, E); break;
            case 0xec: H = OpSet(5, H); break;
            case 0xed: L = OpSet(5, L); break;
            case 0xee: OpSetHL(5); break;
            case 0xef: A = OpSet(5, A); break;
            case 0xf0: B = OpSet(6, B); break;
            case 0xf1: C = OpSet(6, C); break;
            case 0xf2: D = OpSet(6, D); break;
            case 0xf3: E = OpSet(6, E); break;
            case 0xf4: H = OpSet(6, H); break;
            case 0xf5: L = OpSet(6, L); break;
            case 0xf6: OpSetHL(6); break;
            case 0xf7: A = OpSet(6, A); break;
            case 0xf8: B = OpSet(7, B); break;
            case 0xf9: C = OpSet(7, C); break;
            case 0xfa: D = OpSet(7, D); break;
            case 0xfb: E = OpSet(7, E); break;
            case 0xfc: H = OpSet(7, H); break;
            case 0xfd: L = OpSet(7, L); break;
            case 0xfe: OpSetHL(7); break;
            case 0xff: A = OpSet(7, A); break;
        }
    }
}
